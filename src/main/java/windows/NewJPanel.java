/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package windows;

import Common.ImageBackground;
import Form.SudokuFrame;
import Form.SudokuPanel;
import com.terapiacognitiva.sudoku.SudokuGenerator;
import com.terapiacognitiva.sudoku.SudokuPuzzle;
import com.terapiacognitiva.sudoku.SudokuPuzzleType;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Jorge
 */
public class NewJPanel extends javax.swing.JPanel {

 ImageBackground imgBackGround = new ImageBackground();
    
    
    private JPanel buttonSelectionPanel;
	private SudokuPanel sPanel;
	
	public NewJPanel() {
            
            //frmHome agregado para obtener el tama√±o del contenedor principal
		  FrmHome frmHome = new FrmHome();
                  
		// por defecto this.setMinimumSize(new Dimension(800,600)); 
		this.setMinimumSize(new Dimension(800,600)); 
		JPanel windowPanel = new JPanel();
               
		windowPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
                //windowPanel.setBackground(new Color(224,169,72));
		//por defecto windowPanel.setPreferredSize(new Dimension(800,600));
               
                windowPanel.setPreferredSize(new Dimension(800,600));
                 
		
		buttonSelectionPanel = new JPanel();
                //buttonSelectionPanel.setBackground(new Color(158,116,24) ); //para que no salga marron en el panel botones
                buttonSelectionPanel.setOpaque(false); //para que sea tranparente
		buttonSelectionPanel.setPreferredSize(new Dimension(90,500));

		sPanel = new SudokuPanel();
                //600,500
		sPanel.setPreferredSize(new Dimension(600, 500)); //manual agregado evita que el sudoku se haga chiquito************
		windowPanel.add(sPanel);
		windowPanel.add(buttonSelectionPanel);
                 
                //windowPanel.setBackground(Color.red); //se pone todo el fondo rojo
                windowPanel.setOpaque(false);// para que no se ponga rojo y volverlo transparente
		this.add(windowPanel);
		
		rebuildInterface(SudokuPuzzleType.NINEBYNINE, 26);
	}
	
	public void rebuildInterface(SudokuPuzzleType puzzleType,int fontSize) {
		SudokuPuzzle generatedPuzzle = new SudokuGenerator().generateRandomSudoku(puzzleType);
		sPanel.newSudokuPuzzle(generatedPuzzle);
		sPanel.setFontSize(fontSize);
		buttonSelectionPanel.removeAll();
		for(String value : generatedPuzzle.getValidValues()) {
			JButton b = new JButton(value);
			b.setPreferredSize(new Dimension(45,40));
			b.addActionListener(sPanel.new NumActionListener());
			buttonSelectionPanel.add(b);
		}
                JButton btnClear = new JButton("Borrar");
                
                buttonSelectionPanel.add(btnClear);
		sPanel.repaint();
                
		buttonSelectionPanel.revalidate();
		buttonSelectionPanel.repaint();
	}
	
	private class NewGameListener implements ActionListener {

		private SudokuPuzzleType puzzleType;
		private int fontSize;
		
		public NewGameListener(SudokuPuzzleType puzzleType,int fontSize) {
			this.puzzleType = puzzleType;
			this.fontSize = fontSize;
		}
		
		@Override
		public void actionPerformed(ActionEvent e) {
			rebuildInterface(puzzleType,fontSize);
		}
	}
	
	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				SudokuFrame frame = new SudokuFrame();
				frame.setVisible(true);
			}
		});
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(153, 153, 255));
        setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 585, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}


