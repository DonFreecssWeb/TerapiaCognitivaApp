/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package windows;

import Common.ImageBackground;
import Form.SudokuFrame;
import Form.SudokuPanel;
import Model.User;
import dao.DaoFB;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseListener;
import java.io.FileInputStream;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javazoom.jl.player.Player;

/**
 *
 * @author Jorge
 */
public class FrmHome extends javax.swing.JFrame {

    ImageBackground imgBackground = new ImageBackground();

    Player mp3Player = null;
    String email = "";

    /**
     * Creates new form FrmHome
     */
    public FrmHome() {
        this.setContentPane(imgBackground);
        initComponents();
        this.setLocationRelativeTo(null);
        setLogo();
        ajustarBotones();
        showHowToPlaySudoku();

        //setWelcome(email);
        System.out.println("El email es: " + email);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        btnGamePareja = new javax.swing.JButton();
        Nombre1 = new javax.swing.JLabel();
        btnSudoku = new javax.swing.JButton();
        panelHowToPlay = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnLogin = new javax.swing.JMenuItem();
        menuQuit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contentPanel.setBackground(new java.awt.Color(255, 51, 51));
        contentPanel.setOpaque(false);
        contentPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(224, 169, 72));
        jPanel1.setOpaque(false);

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblName.setForeground(new java.awt.Color(102, 102, 102));
        lblName.setText("Bienvenido ");

        Nombre.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Nombre.setForeground(new java.awt.Color(102, 102, 102));
        Nombre.setText("Sudoku");

        btnGamePareja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGameParejaActionPerformed(evt);
            }
        });

        Nombre1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Nombre1.setForeground(new java.awt.Color(102, 102, 102));
        Nombre1.setText("Encuentra la pareja");

        btnSudoku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSudokuActionPerformed(evt);
            }
        });

        panelHowToPlay.setOpaque(false);

        javax.swing.GroupLayout panelHowToPlayLayout = new javax.swing.GroupLayout(panelHowToPlay);
        panelHowToPlay.setLayout(panelHowToPlayLayout);
        panelHowToPlayLayout.setHorizontalGroup(
            panelHowToPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
        panelHowToPlayLayout.setVerticalGroup(
            panelHowToPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 827, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(Nombre1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(Nombre))
                            .addComponent(btnGamePareja, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSudoku, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131)
                        .addComponent(panelHowToPlay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(lblName)
                .addGap(108, 108, 108)
                .addComponent(btnSudoku, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(Nombre)
                .addGap(67, 67, 67)
                .addComponent(btnGamePareja, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(Nombre1)
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelHowToPlay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contentPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Archivo");

        btnLogin.setText("Cerrar sesi√≥n");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jMenu1.add(btnLogin);

        menuQuit.setText("Salir");
        menuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuQuitActionPerformed(evt);
            }
        });
        jMenu1.add(menuQuit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1348, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(contentPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1096, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGameParejaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGameParejaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnGameParejaActionPerformed

    private void btnSudokuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSudokuActionPerformed
        // TODO add your handling code here:

        //NewJPanel panel = new  NewJPanel();
        // panel.setBounds( 0,0, 500, 500);
        /*
      // panel.setSize(1000,650);
      
       //panel.setLocation(200,200);
          contentPanel.removeAll();
          contentPanel.add(panel);
          contentPanel.revalidate();
          contentPanel.repaint();
         */
        NewJPanel panel = new NewJPanel();
        //panel.setSize(800, 600);
        
        //panel.setBackground(Color.yellow);
        jPanel1.setVisible(false);
        //   panel.setVisible(true);
        //false para que cuando cargue el panel del sudoku, se muestre nuestro fondo
        panel.setOpaque(false);
          contentPanel.setLayout(new GridBagLayout()); // centra el sudoku en el contentPanel
          contentPanel.add(panel);
        

        //  contentPanel.revalidate();
        // contentPanel.repaint();
        System.out.println("btnSudoku");
    }//GEN-LAST:event_btnSudokuActionPerformed

    private void menuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuQuitActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_menuQuitActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        FrmLogin frmLogin = new FrmLogin();
        frmLogin.setVisible(true);
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmHome().setVisible(true);
            }
        });
    }

    private void ajustarBotones() {
        
         btnSudoku.setBorder(BorderFactory.createLineBorder(new Color(102, 102, 102), 5));
        
        String sudokuPath = "src/main/java/images/sudoku.jpg";
        String parejaPath = "src/main/java/images/pareja.jpg";

        ImageIcon imageIcon = new ImageIcon(sudokuPath);

        /*
        Icon icon = new ImageIcon(
                imageIcon.getImage().getScaledInstance(btnSudoku.getWidth(), btnSudoku.getHeight(),Image.SCALE_DEFAULT));
         */
        //Game 1
        Image img = imageIcon.getImage();

        Image resizedImage = img.getScaledInstance(btnSudoku.getWidth(), btnSudoku.getHeight(), Image.SCALE_SMOOTH);

        btnSudoku.setIcon(new ImageIcon(resizedImage));

        btnSudoku.addMouseListener(ml);

        //Game 2
        ImageIcon imageIcon2 = new ImageIcon(parejaPath);
        Image imgPareja = imageIcon2.getImage();
        Image resizedImage2 = imgPareja.getScaledInstance(btnGamePareja.getWidth(), btnGamePareja.getHeight(), Image.SCALE_SMOOTH);
        btnGamePareja.setIcon(new ImageIcon(resizedImage2));

        btnGamePareja.addMouseListener(ml);
    }

    MouseListener ml = new MouseAdapter() {

        public void mouseEntered(java.awt.event.MouseEvent evt) {
            Component c = evt.getComponent();
            c.setBackground(new Color(236, 252, 250));
            if (evt.getSource() == btnSudoku) {
                showHowToPlaySudoku();
                btnSudoku.setBorder(BorderFactory.createLineBorder(new Color(102, 102, 102), 5));
                 btnGamePareja.setBorder(BorderFactory.createEmptyBorder()); 
                
            } else if((evt.getSource() == btnGamePareja) ) {
                 showHowToPlauFindPair();
                btnGamePareja.setBorder(BorderFactory.createLineBorder(new Color(102, 102, 102), 5));
                 btnSudoku.setBorder(BorderFactory.createEmptyBorder()); 
            }

            String audioFilePath = "src/main/java/sounds/hover_sound.mp3";

            try {
                FileInputStream fileInputStream = new FileInputStream(audioFilePath);

                mp3Player = new Player(fileInputStream);
                mp3Player.play(5);

            } catch (Exception ex) {
                System.out.println("Error occured during playback process:" + ex.getMessage());
            }
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {

            Component c = evt.getComponent();

            c.setBackground(new Color(241, 241, 241));

            if (evt.getSource() == btnSudoku) {
               
               
                
                
                //JButton b = (JButton)(evt.getSource());
               // btnSudoku.setBorder(BorderFactory.createEmptyBorder());
            } else {
                //btnGamePareja.setBorder(BorderFactory.createEmptyBorder());
            }

            mp3Player.close();
        }

       
    };
 private void showHowToPlaySudoku() {
             PanelHowToPlaySudoku panel = new PanelHowToPlaySudoku();
               // panel.setVisible(true);
               
                panel.setSize(699, 791); // se requiere para que se vea
                panel.setLocation(0,0);
                
                panelHowToPlay.removeAll();               
                panelHowToPlay.add(panel, BorderLayout.CENTER);
                panelHowToPlay.revalidate();
                panelHowToPlay.repaint();
        }

        private void showHowToPlauFindPair() {
        PanelHowToPlayFindPair panel = new PanelHowToPlayFindPair();
                 panel.setSize(699, 850); // se requiere para que se vea
                panel.setLocation(0,0);
                
                panelHowToPlay.removeAll();               
                panelHowToPlay.add(panel, BorderLayout.CENTER);
                panelHowToPlay.revalidate();
                panelHowToPlay.repaint();
        }
    private void setLogo() {
        String logoPath = "src/main/java/images/logo.png";
        setIconImage(Toolkit.getDefaultToolkit().getImage(logoPath));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel Nombre1;
    private javax.swing.JButton btnGamePareja;
    private javax.swing.JMenuItem btnLogin;
    private javax.swing.JButton btnSudoku;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblName;
    private javax.swing.JMenuItem menuQuit;
    private javax.swing.JPanel panelHowToPlay;
    // End of variables declaration//GEN-END:variables

    private void setWelcome(String email) {

        //lblName.setText("Bienvenido: "+user.getName());
        this.revalidate();
    }

    void updateView(String email) {
        User user = new User();
        DaoFB dao = new DaoFB();
        user = dao.getUser(email);
        lblName.setText("Bienvenido: " + user.getName());
    }
}
